name: E2E

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.51.1
    env:
      HOME: /root
      RAILS_ENV: test
      RAILS_MASTER_KEY: ${{ secrets.RAILS_TEST_KEY }}
      STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
      CI: true

    steps:
    - name: Install system dependencies
      run: apt-get update && apt-get install --no-install-recommends -y curl libjemalloc2 libvips sqlite3 build-essential libyaml-dev

    - uses: actions/checkout@v5
      with:
        submodules: recursive

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'yarn'

    - name: Install yarn dependencies
      run: yarn install

    - name: Cache Rails assets
      uses: actions/cache@v4
      id: assets-cache
      with:
        path: |
          public/assets
          tmp/cache/assets
          app/assets/builds
        key: ${{ runner.os }}-assets-${{ hashFiles('**/yarn.lock', 'app/assets/**/*', 'config/tailwind.config.js', 'app/javascript/**/*.js', 'app/views/**/*', 'app/components/**/*', 'app/helpers/**/*') }}
        restore-keys: |
          ${{ runner.os }}-assets-${{ hashFiles('**/yarn.lock') }}
          ${{ runner.os }}-assets-

    - name: Install Stripe CLI
      run: |
        curl -s https://packages.stripe.dev/api/security/keypair/stripe-cli-gpg/public | gpg --dearmor | tee /usr/share/keyrings/stripe.gpg > /dev/null && \
        echo "deb [signed-by=/usr/share/keyrings/stripe.gpg] https://packages.stripe.dev/stripe-cli-debian-local stable main" | tee -a /etc/apt/sources.list.d/stripe.list && \
        apt-get update && \
        apt-get install -y stripe

    - name: Precompile assets
      if: steps.assets-cache.outputs.cache-hit != 'true'
      run: |
        echo "Starting asset precompilation..."
        start_time=$(date +%s)

        bundle exec rake assets:precompile

        end_time=$(date +%s)
        duration=$((end_time - start_time))
        echo "Asset precompilation finished in $duration seconds."

    - name: Run E2E tests in parallel
      run: bin/e2e --parallel[4]
      env:
        GITHUB_RUN_ID: ${{ github.run_id }}

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
