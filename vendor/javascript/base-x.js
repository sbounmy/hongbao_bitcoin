// base-x@5.0.1 downloaded from https://ga.jspm.io/npm:base-x@5.0.1/src/esm/index.js

function base(e){if(e.length>=255)throw new TypeError("Alphabet too long");const t=new Uint8Array(256);for(let e=0;e<t.length;e++)t[e]=255;for(let r=0;r<e.length;r++){const n=e.charAt(r);const o=n.charCodeAt(0);if(t[o]!==255)throw new TypeError(n+" is ambiguous");t[o]=r}const r=e.length;const n=e.charAt(0);const o=Math.log(r)/Math.log(256);const c=Math.log(256)/Math.log(r);function encode(t){t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t)));if(!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length===0)return"";let o=0;let i=0;let l=0;const a=t.length;while(l!==a&&t[l]===0){l++;o++}const f=(a-l)*c+1>>>0;const h=new Uint8Array(f);while(l!==a){let e=t[l];let n=0;for(let t=f-1;(e!==0||n<i)&&t!==-1;t--,n++){e+=256*h[t]>>>0;h[t]=e%r>>>0;e=e/r>>>0}if(e!==0)throw new Error("Non-zero carry");i=n;l++}let s=f-i;while(s!==f&&h[s]===0)s++;let w=n.repeat(o);for(;s<f;++s)w+=e.charAt(h[s]);return w}function decodeUnsafe(e){if(typeof e!=="string")throw new TypeError("Expected String");if(e.length===0)return new Uint8Array;let c=0;let i=0;let l=0;while(e[c]===n){i++;c++}const a=(e.length-c)*o+1>>>0;const f=new Uint8Array(a);while(c<e.length){const n=e.charCodeAt(c);if(n>255)return;let o=t[n];if(o===255)return;let i=0;for(let e=a-1;(o!==0||i<l)&&e!==-1;e--,i++){o+=r*f[e]>>>0;f[e]=o%256>>>0;o=o/256>>>0}if(o!==0)throw new Error("Non-zero carry");l=i;c++}let h=a-l;while(h!==a&&f[h]===0)h++;const s=new Uint8Array(i+(a-h));let w=i;while(h!==a)s[w++]=f[h++];return s}function decode(e){const t=decodeUnsafe(e);if(t)return t;throw new Error("Non-base"+r+" character")}return{encode:encode,decodeUnsafe:decodeUnsafe,decode:decode}}export{base as default};

