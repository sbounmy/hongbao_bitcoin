<div data-controller="visual-editor"
     data-visual-editor-input-base-name-value="<%= @input_base_name %>"
     class="visual-editor-container border rounded-lg p-4 relative">

  <div class="flex justify-between items-center mb-4">
    <div class="btn-group flex gap-2">
      <%= button_tag "Front", type: "button", class: "btn btn-sm btn-active", data: { action: "click->visual-editor#switchView", visual_editor_target: "frontTab", view: "front" } %>
      <%= button_tag "Back", type: "button", class: "btn btn-sm", data: { action: "click->visual-editor#switchView", visual_editor_target: "backTab", view: "back" } %>
    </div>
    <%= button_tag "Reset", type: "button", class: "btn btn-ghost btn-sm", data: { action: "click->visual-editor#resetElements" } %>
  </div>

  <div data-visual-editor-target="canvas" class="relative bg-gray-200 overflow-hidden rounded" data-action="click->visual-editor#deselect">
    <%= image_tag url_for(image_front), class: "w-full h-auto block", data: { visual_editor_target: "frontImage" } if image_front.attached? %>
    <%= image_tag url_for(image_back), class: "w-full h-auto hidden", data: { visual_editor_target: "backImage" } if image_back.attached? %>

    <% if !image_front.attached? && !image_back.attached? %>
      <div class="text-center p-10 bg-gray-100">
        <p>Please attach a Front and/or Back image to use the visual editor.</p>
      </div>
    <% end %>

    <% elements_by_view.each do |view, elements| %>
      <% elements.each do |element_type| %>
        <% if all_ai_element_types.map(&:to_s).include?(element_type.to_s) %>
          <div
            data-visual-editor-target="element"
            data-element-type="<%= element_type %>"
            data-view="<%= view %>"
            data-action="click->visual-editor#selectElement"
            class="visual-element absolute border-2 border-dashed border-blue-500 hover:border-solid hover:cursor-move select-none touch-none <%= element_hidden_class(view) %>"
            style="color: <%= element_color(element_type) %>; font-family: Arial, sans-serif;"
          >
            <% if is_qr?(element_type) %>
              <div class="w-full h-full bg-white/60 pointer-events-none flex items-center justify-center font-bold text-blue-700"> <%= heroicon "qr-code", class:"h-full w-full text-black" %></div>
            <% else %>
              <p class="pointer-events-none m-0 p-0 leading-tight whitespace-pre-wrap <%= 'break-all' unless element_type.to_s == 'mnemonic_text' %>"><%= preview_text(element_type) %></p>
            <% end %>
          </div>
        <% end %>
      <% end %>
    <% end %>
  </div>

  <%= render Admin::PropertiesPanelComponent.new %>

  <div class="hidden">
    <% all_ai_element_types.each do |element_type| %>
      <% all_ai_element_properties.each do |property| %>
        <%
          input_name = "#{@input_base_name}[#{element_type}][#{property}]"
          current_value = hidden_input_value(element_type, property)
        %>
        <%= text_field_tag input_name, current_value, name: input_name, data: { visual_editor_target: "hiddenInput", element_type: element_type, property: property } %>
      <% end %>
    <% end %>
  </div>
</div>