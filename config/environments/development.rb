require "active_support/core_ext/integer/time"

Rails.application.configure do
  host = ENV.fetch("APP_HOST") { "localhost:3002" }
  base_url = host.include?("localhost") ? "http://#{host}" : "https://#{host}"

  # Settings specified here will take precedence over those in config/application.rb.

  # Make code changes take effect immediately without server restart.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing.
  config.server_timing = true

  # Enable/disable Action Controller caching. By default Action Controller caching is disabled.
  # Run rails dev:cache to toggle Action Controller caching.
  if Rails.root.join("tmp/caching-dev.txt").exist?
    config.action_controller.perform_caching = true
    config.action_controller.enable_fragment_cache_logging = true
    config.public_file_server.headers = { "cache-control" => "public, max-age=#{2.days.to_i}" }
  else
    config.action_controller.perform_caching = false
  end

  # Change to :null_store to avoid any caching.
  config.cache_store = :memory_store

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  # Make template changes take effect immediately.
  config.action_mailer.perform_caching = false

  # Set localhost to be used by links generated in mailer templates.
  config.action_mailer.default_url_options = { host: host }

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  # Highlight code that triggered database queries in logs.
  config.active_record.verbose_query_logs = true

  # Append comments with runtime information tags to SQL queries in logs.
  config.active_record.query_log_tags_enabled = true

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # Allow ActionCable requests from any origin
  config.action_cable.disable_request_forgery_protection = true

  # Use secure WebSocket for ngrok, regular WebSocket for localhost
  config.action_cable.url = host.include?("localhost") ? "ws://#{host}/cable" : "wss://#{host}/cable"
  config.action_cable.allowed_request_origins = [
    base_url,
    "http://127.0.0.1:3002",
    /https?:\/\/localhost:*/
  ]

  # Raise error when a before_action's only/except options reference missing actions.
  config.action_controller.raise_on_missing_callback_actions = true

  # Apply autocorrection by RuboCop to files generated by `bin/rails generate`.
  # config.generators.apply_rubocop_autocorrect_after_generate!

  # Configure asset host and mailer options with cleaner URL handling
  config.action_controller.asset_host = base_url

  # Use Letter Opener for emails in development
  config.action_mailer.delivery_method = :letter_opener
  config.action_mailer.perform_deliveries = true

  # Allow hosts for development
  config.hosts << ENV["APP_HOST"]

  config.web_console.allowed_ips = "0.0.0.0/0"
  Rails.application.routes.default_url_options[:host] = base_url

  # Mute ActiveStorage logs
  config.lograge.enabled = true
  config.lograge.ignore_actions = %w[
    ActiveStorage::DiskController#show
    ActiveStorage::RepresentationsController#show
  ]
  config.lograge.logger = ActiveSupport::Logger.new "#{Rails.root}/log/lograge_#{Rails.env}.log"
  ActiveStorage::LogSubscriber.detach_from :active_storage
end
